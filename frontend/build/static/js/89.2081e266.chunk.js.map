{"version":3,"file":"static/js/89.2081e266.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","components/hook-form/RHFAutocomplete.js","components/hook-form/RHFCodes.js","hooks/useThunk.js","../node_modules/phosphor-react/src/icons/GoogleLogo.tsx","../node_modules/phosphor-react/src/icons/GithubLogo.tsx","../node_modules/phosphor-react/src/icons/TwitterLogo.tsx","sections/auth/AuthSocial.js","sections/auth/LoginForm.js"],"sourcesContent":["// Proptypes\r\nimport PropTypes from \"prop-types\";\r\n\r\n// React Hook Form\r\nimport { FormProvider as Form } from \"react-hook-form\";\r\n\r\nFormProvider.propTypes = {\r\n  children: PropTypes.node,\r\n  methods: PropTypes.object,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default function FormProvider({ children, onSubmit, methods }) {\r\n  return (\r\n    <Form {...methods}>\r\n      <form onSubmit={onSubmit}>{children}</form>\r\n    </Form>\r\n  );\r\n}\r\n","// Proptypes\r\nimport PropTypes from \"prop-types\";\r\n\r\n// React Hook Form\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\n\r\n// MUI\r\nimport { TextField } from \"@mui/material\";\r\n\r\nRHFTextField.propTypes = {\r\n  name: PropTypes.string,\r\n  helperText: PropTypes.node,\r\n};\r\n\r\nexport default function RHFTextField({ name, helperText, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <TextField\r\n          {...field}\r\n          fullWidth\r\n          value={\r\n            typeof field.value === \"number\" && field.value === 0\r\n              ? \"\"\r\n              : field.value\r\n          }\r\n          error={!!error}\r\n          helperText={error ? error?.message : helperText}\r\n          {...other}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","// Proptypes\r\nimport PropTypes from \"prop-types\";\r\n\r\n// React Hook Form\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\n\r\n// MUI\r\nimport { Autocomplete, TextField } from \"@mui/material\";\r\n\r\nRHFAutocomplete.propTypes = {\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  helperText: PropTypes.node,\r\n};\r\n\r\nexport default function RHFAutocomplete({ name, label, helperText, ...other }) {\r\n  const { control, setValue } = useFormContext();\r\n\r\n  // Autocomplete onChange handler\r\n  const handlerOnChange = (event, newValue) => {\r\n    setValue(name, newValue, { shouldValidate: true });\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <Autocomplete\r\n          {...field}\r\n          fullWidth\r\n          value={\r\n            typeof field.value === \"number\" && field.value === 0\r\n              ? \"\"\r\n              : field.value\r\n          }\r\n          onChange={handlerOnChange}\r\n          {...other}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              label={label}\r\n              error={!!error}\r\n              helperText={error ? error?.message : helperText}\r\n              {...params}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { Stack, TextField } from \"@mui/material\";\r\nimport { useRef } from \"react\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\n\r\nconst RHFCodes = ({ keyName = \"\", inputs = [], ...other }) => {\r\n  const codesRef = useRef(null);\r\n\r\n  const { control } = useFormContext();\r\n\r\n  const handleChangeWithNextField = (event, handleChange) => {\r\n    const { maxLength, value, name } = event.target;\r\n\r\n    const fieldIntIndex = Number(name.replace(keyName, \"\"));\r\n\r\n    const nextField = document.querySelector(\r\n      `input[name=${keyName}${fieldIntIndex + 1}]`\r\n    );\r\n\r\n    if (value.length > maxLength) {\r\n      event.target.value = value[0];\r\n    }\r\n\r\n    if (value.length >= maxLength && fieldIntIndex < 6 && nextField !== null) {\r\n      nextField.focus();\r\n    }\r\n\r\n    handleChange(event);\r\n  };\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2} justifyContent=\"center\" ref={codesRef}>\r\n      {inputs.map((name, index) => (\r\n        <Controller\r\n          key={name}\r\n          name={`${keyName}${index + 1}`}\r\n          control={control}\r\n          render={({ field, fieldState: { error } }) => (\r\n            <TextField\r\n              {...field}\r\n              error={!!error}\r\n              autoFocus={index === 0}\r\n              placeholder={\"-\"}\r\n              onChange={(event) => {\r\n                handleChangeWithNextField(event, field.onChange);\r\n              }}\r\n              onFocus={(event) => event.currentTarget.select()}\r\n              InputProps={{\r\n                sx: {\r\n                  width: { xs: 36, sm: 56 },\r\n                  height: { xs: 36, sm: 56 },\r\n                  \"& input\": { p: 0, textAlign: \"center\" },\r\n                },\r\n              }}\r\n              inputProps={{\r\n                maxLength: 1,\r\n                type: \"number\",\r\n              }}\r\n              {...other}\r\n            />\r\n          )}\r\n        />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default RHFCodes;\r\n","// React\r\nimport { useCallback } from \"react\";\r\n// React Redux\r\nimport { useDispatch } from \"react-redux\";\r\n// Redux\r\nimport { openSnackBar, setUser } from \"../store\";\r\n\r\n// React-Router-Dom\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction useThunk(thunk) {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const runThunk = useCallback(\r\n    (data) => {\r\n      dispatch(thunk(data))\r\n        .unwrap()\r\n        .then((res) => {\r\n          dispatch(\r\n            openSnackBar({\r\n              message: res.message,\r\n              severity: \"success\",\r\n            })\r\n          );\r\n          if (res?.message === \"OTP Sent Successfully!\")\r\n            navigate(\"/auth/verify-otp\");\r\n\r\n          if (res?.user) {\r\n            window.localStorage.setItem(\"userId\", res.user._id);\r\n            // Setting user details\r\n            dispatch(setUser(res?.user));\r\n          }\r\n          // TODO: remove log\r\n        })\r\n        .catch((err) => {\r\n          dispatch(\r\n            openSnackBar({\r\n              message: err.message,\r\n              severity: \"error\",\r\n            })\r\n          );\r\n          console.log(err);\r\n        });\r\n    },\r\n    [dispatch, thunk]\r\n  );\r\n\r\n  return [runThunk];\r\n}\r\n\r\nexport default useThunk;\r\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm0,184A80,80,0,1,1,184.6,71.4a8,8,0,0,1,0,11.3,7.9,7.9,0,0,1-11.3,0A64.1,64.1,0,1,0,191.5,136H128a8,8,0,0,1,0-16h72a8,8,0,0,1,8,8A80.1,80.1,0,0,1,128,208Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GoogleLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGoogleLogo.displayName = \"GoogleLogo\";\n\nexport default GoogleLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M224,224a8,8,0,0,1-8,8,32.1,32.1,0,0,1-32-32v-8a16,16,0,0,0-16-16H156v40a16,16,0,0,0,16,16,8,8,0,0,1,0,16,32.1,32.1,0,0,1-32-32V176H116v40a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16V176H88a16,16,0,0,0-16,16v8a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16v-8a32.1,32.1,0,0,1,14.8-27A55.8,55.8,0,0,1,48,120v-8a58,58,0,0,1,7.7-28.3A59.9,59.9,0,0,1,61.1,36,7.8,7.8,0,0,1,68,32a59.7,59.7,0,0,1,48,24h24a59.7,59.7,0,0,1,48-24,7.8,7.8,0,0,1,6.9,4,59.9,59.9,0,0,1,5.4,47.7A58,58,0,0,1,208,112v8a55.8,55.8,0,0,1-22.8,45A32.1,32.1,0,0,1,200,192v8a16,16,0,0,0,16,16A8,8,0,0,1,224,224Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GithubLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGithubLogo.displayName = \"GithubLogo\";\n\nexport default GithubLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M245.7,77.7l-30.2,30.1C209.5,177.7,150.5,232,80,232c-14.5,0-26.5-2.3-35.6-6.8-7.3-3.7-10.3-7.6-11.1-8.8a8,8,0,0,1,3.9-11.9c.2-.1,23.8-9.1,39.1-26.4a108.6,108.6,0,0,1-24.7-24.4c-13.7-18.6-28.2-50.9-19.5-99.1a8.1,8.1,0,0,1,5.5-6.2,8,8,0,0,1,8.1,1.9c.3.4,33.6,33.2,74.3,43.8V88a48.3,48.3,0,0,1,48.6-48,48.2,48.2,0,0,1,41,24H240a8,8,0,0,1,7.4,4.9A8.4,8.4,0,0,1,245.7,77.7Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst TwitterLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nTwitterLogo.displayName = \"TwitterLogo\";\n\nexport default TwitterLogo;\n","// React\r\nimport React from \"react\";\r\n\r\n// MUI\r\nimport { Box, Divider, IconButton, Stack } from \"@mui/material\";\r\nimport { GithubLogo, GoogleLogo, TwitterLogo } from \"phosphor-react\";\r\n\r\nconst AuthSocial = () => {\r\n  //Styles\r\n  const dividerStyle = {\r\n    my: 2.5,\r\n    typography: \"overline\",\r\n    color: \"text.disabled\",\r\n    \"&::before, ::after\": {\r\n      borderTopStyle: \"dashed\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Divider sx={dividerStyle}>OR</Divider>\r\n      <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n        <IconButton>\r\n          <GoogleLogo color=\"#DF3E30\" />\r\n        </IconButton>\r\n        <IconButton color=\"inherit\">\r\n          <GithubLogo />\r\n        </IconButton>\r\n        <IconButton>\r\n          <TwitterLogo color=\"#1C9CEA\" />\r\n        </IconButton>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AuthSocial;\r\n","// React\r\nimport { useState } from \"react\";\r\n\r\n// React-hook-form, Yup, @hookform/resolvers\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\n// Hook Form\r\nimport FormProvider from \"../../components/hook-form\";\r\nimport { RHFTextField } from \"../../components/hook-form\";\r\n\r\n// MUI\r\nimport {\r\n  Alert,\r\n  InputAdornment,\r\n  Stack,\r\n  IconButton,\r\n  Link,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\n\r\n// React Router Dom\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\n// Phosphor React\r\nimport { Eye, EyeSlash } from \"phosphor-react\";\r\n\r\n// Redux\r\nimport { login } from \"../../store\";\r\n\r\n// React-Redux\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// Redux useThunk Hook\r\nimport useThunk from \"../../hooks/useThunk\";\r\n\r\n// Using in RegisterForm as well\r\n// Button style\r\nexport const loginButton = {\r\n  bgcolor: \"text.primary\",\r\n  color: (theme) =>\r\n    theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n  \"&:hover\": {\r\n    bgcolor: \"text.primary\",\r\n    color: (theme) =>\r\n      theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n  },\r\n};\r\n\r\nconst LoginForm = () => {\r\n  // State\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  // React-Redux\r\n  const { isLoading } = useSelector((state) => state.auth);\r\n\r\n  // Passing login thunk in hook\r\n  const [doLogin] = useThunk(login);\r\n\r\n  // React Hook Form\r\n  // Object schema for validation\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email must be a valid email address\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  const defaultValues = {\r\n    email: \"demo@gochat.com\",\r\n    password: \"demo123\",\r\n  };\r\n\r\n  // yup resolver will make the object schema readable for the React hook form\r\n  const methods = useForm({\r\n    resolver: yupResolver(LoginSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  // Methods to handle form\r\n  const {\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const onSubmit = (data) => {\r\n    doLogin(data);\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        {!!errors.afterSubmit && (\r\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\r\n        )}\r\n        <RHFTextField name=\"email\" label=\"Email address\" />\r\n        <RHFTextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={() => setShowPassword(!showPassword)}>\r\n                  {showPassword ? <Eye /> : <EyeSlash />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n      <Stack alignItems=\"flex-end\" sx={{ my: 2 }}>\r\n        <Link\r\n          component={RouterLink}\r\n          to=\"/auth/reset-password\"\r\n          variant=\"body2\"\r\n          color=\"inherit\"\r\n          underline=\"always\"\r\n        >\r\n          Forgot Password?\r\n        </Link>\r\n      </Stack>\r\n      <Button\r\n        fullWidth\r\n        color=\"inherit\"\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        sx={loginButton}\r\n      >\r\n        {isLoading ? <CircularProgress color=\"inherit\" /> : \"Login\"}\r\n      </Button>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"names":["FormProvider","children","onSubmit","methods","RHFTextField","name","helperText","other","control","useFormContext","render","field","error","fieldState","TextField","fullWidth","value","message","RHFAutocomplete","label","setValue","handlerOnChange","event","newValue","shouldValidate","Autocomplete","onChange","renderInput","params","keyName","inputs","codesRef","useRef","Stack","direction","spacing","justifyContent","ref","map","index","autoFocus","placeholder","handleChange","target","maxLength","fieldIntIndex","Number","replace","nextField","document","querySelector","length","focus","handleChangeWithNextField","onFocus","currentTarget","select","InputProps","sx","width","xs","sm","height","p","textAlign","inputProps","type","thunk","dispatch","useDispatch","navigate","useNavigate","useCallback","data","unwrap","then","res","openSnackBar","severity","user","window","localStorage","setItem","_id","setUser","catch","err","console","log","pathsByWeight","Map","set","color","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","renderPath","weight","renderPathForWeight","GoogleLogo","forwardRef","props","IconBase","displayName","opacity","GithubLogo","TwitterLogo","Box","Divider","my","typography","borderTopStyle","IconButton","loginButton","bgcolor","theme","palette","mode","useState","showPassword","setShowPassword","isLoading","useSelector","state","auth","useThunk","login","doLogin","LoginSchema","Yup","shape","email","required","password","useForm","resolver","yupResolver","defaultValues","handleSubmit","errors","formState","afterSubmit","endAdornment","position","onClick","alignItems","component","RouterLink","to","variant","underline","size"],"sourceRoot":""}