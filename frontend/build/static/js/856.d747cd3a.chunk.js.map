{"version":3,"file":"static/js/856.d747cd3a.chunk.js","mappings":"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","sources":["components/CallElement.js","sections/friends/StartCallDialog.js","pages/dashboard/Call.js","../node_modules/phosphor-react/src/icons/VideoCamera.tsx"],"sourcesContent":["// Element Box Wrapper\r\nimport ElementWrapper from \"./ElementWrapper\";\r\n\r\n// MUI\r\nimport { Avatar, IconButton, Stack, Typography } from \"@mui/material\";\r\n\r\n// Importing Custom MUI Components\r\nimport StyledBadge from \"./StyledBadge\";\r\n\r\n// Faker\r\nimport { faker } from \"@faker-js/faker\";\r\n\r\n// Phosphor React\r\nimport { Phone, VideoCamera } from \"phosphor-react\";\r\n\r\nconst CallElement = ({ online }) => {\r\n  return (\r\n    <ElementWrapper>\r\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar src={faker.image.avatar()} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={faker.person.fullName()} src={faker.image.avatar()} />\r\n          )}\r\n          <Typography variant=\"subtitle2\">{faker.person.fullName()}</Typography>\r\n        </Stack>\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n          <IconButton>\r\n            <Phone color=\"green\" />\r\n          </IconButton>\r\n          <IconButton>\r\n            <VideoCamera color=\"green\" />\r\n          </IconButton>\r\n        </Stack>\r\n      </Stack>\r\n    </ElementWrapper>\r\n  );\r\n};\r\n\r\nexport default CallElement;\r\n","// Importing Components\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport CallElement from \"../../components/CallElement\";\r\n\r\n// MUI\r\nimport { Stack } from \"@mui/material\";\r\n\r\nconst StartCallDialog = () => {\r\n  return (\r\n    <Stack spacing={2}>\r\n      <SearchBar />\r\n      <CallElement online={true} />\r\n      <CallElement />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default StartCallDialog;\r\n","// React\r\nimport { useState } from \"react\";\r\n\r\n// Chat\r\nimport Chat from \"./Chat\";\r\n\r\n// MUI\r\nimport { Stack, Typography, Link, IconButton } from \"@mui/material\";\r\n\r\n// MUI Styles\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\n// Phosphor React\r\nimport { Plus } from \"phosphor-react\";\r\n\r\n// Importing Custom MUI Component\r\nimport AlertDialog from \"../../components/AlertDialog\";\r\n\r\n// Importing Dialog Component\r\nimport StartCallDialog from \"../../sections/friends/StartCallDialog\";\r\n\r\nconst Call = () => {\r\n  // Theme\r\n  const theme = useTheme();\r\n\r\n  // State to handle Create New Group Dialog\r\n  const [openCreateNewCall, setOpenCreateNewCall] = useState(false);\r\n\r\n  const handlerOpenCreateNewCall = () => {\r\n    setOpenCreateNewCall(true);\r\n  };\r\n\r\n  const handlerCloseCreateNewCall = () => {\r\n    setOpenCreateNewCall(false);\r\n  };\r\n\r\n  // Option Component\r\n  const createNewCall = (\r\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Typography variant=\"subtitle2\" component={Link}>\r\n        Start Call\r\n      </Typography>\r\n      <IconButton onClick={handlerOpenCreateNewCall}>\r\n        <Plus style={{ color: theme.palette.primary.main }} />\r\n      </IconButton>\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Chat heading=\"Call Logs\" option={createNewCall} elementType=\"Call\" />\r\n      <AlertDialog\r\n        open={openCreateNewCall}\r\n        onClose={handlerCloseCreateNewCall}\r\n        dialogText=\"Start Call\"\r\n        dialogForm={<StartCallDialog />}\r\n        fullWidth\r\n        maxWidth=\"xs\"\r\n      ></AlertDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Call;\r\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M176,92v96a16,16,0,0,1-16,16H48A40,40,0,0,1,8,164V68A16,16,0,0,1,24,52H136A40,40,0,0,1,176,92Zm68-18.9a7.7,7.7,0,0,0-8,0L196,95.9a8,8,0,0,0-4,7v50.2a8,8,0,0,0,4,7l40,22.8a8.3,8.3,0,0,0,4,1.1,8,8,0,0,0,4-1.1,7.8,7.8,0,0,0,4-6.9V80A7.8,7.8,0,0,0,244,73.1Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst VideoCamera = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nVideoCamera.displayName = \"VideoCamera\";\n\nexport default VideoCamera;\n"],"names":["online","ElementWrapper","Stack","direction","alignItems","justifyContent","spacing","StyledBadge","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","src","faker","alt","Typography","IconButton","color","SearchBar","theme","useTheme","useState","openCreateNewCall","setOpenCreateNewCall","createNewCall","component","Link","onClick","style","palette","primary","main","Chat","heading","option","elementType","AlertDialog","open","onClose","dialogText","dialogForm","fullWidth","maxWidth","pathsByWeight","Map","set","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","points","opacity","renderPath","weight","renderPathForWeight","VideoCamera","forwardRef","props","ref","IconBase","displayName"],"sourceRoot":""}