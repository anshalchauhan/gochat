{"version":3,"file":"static/js/796.286746f2.chunk.js","mappings":"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","sources":["components/AlertDialog.js","components/LeftBoxWrapper.js","components/ScrollBar.js","components/StyledBadge.js","components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","components/hook-form/RHFAutocomplete.js","components/hook-form/RHFCodes.js","components/SearchBar.js","sections/friends/ListComponent.js","sections/friends/List.js","sections/friends/Friends.js","components/ElementWrapper.js","pages/dashboard/ChatElement.js","components/ChatElementDisplay.js","components/CallLogElement.js","components/CallElementDisplay.js","pages/dashboard/Chat.js","../node_modules/phosphor-react/src/icons/Plus.tsx","pages/dashboard/CreateGroupDialogForm.js","pages/dashboard/Group.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Slide,\r\n} from \"@mui/material\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst AlertDialog = ({\r\n  open,\r\n  onClose,\r\n  dialogText,\r\n  dialogContentText,\r\n  dialogForm,\r\n  ...others\r\n}) => {\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={onClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n        {...others}\r\n      >\r\n        {dialogText && <DialogTitle sx={{ mb: 3 }}>{dialogText}</DialogTitle>}\r\n        <DialogContent>\r\n          {dialogContentText && (\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              {dialogContentText}\r\n            </DialogContentText>\r\n          )}\r\n          {dialogForm}\r\n        </DialogContent>\r\n        {/* <DialogActions>\r\n          <Button onClick={onClose}>Disagree</Button>\r\n          <Button onClick={onClose}>Agree</Button>\r\n        </DialogActions> */}\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlertDialog;\r\n","// MUI\r\nimport { Stack, Box } from \"@mui/material\";\r\n\r\nconst LeftBoxWrapper = ({ children, padding, spacing }) => {\r\n  //Chat\r\n  const chatStyle = {\r\n    position: \"relative\",\r\n    height: \"100vh\",\r\n    width: 320,\r\n    backgroundColor: (theme) =>\r\n      theme.palette.mode === \"light\"\r\n        ? \"#F8FAFF\"\r\n        : theme.palette.background.paper,\r\n    boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n  };\r\n\r\n  return (\r\n    <Box sx={chatStyle}>\r\n      <Stack p={padding} spacing={spacing} direction=\"column\" height=\"100%\">\r\n        {children}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LeftBoxWrapper;\r\n","import { Box } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst ScrollBar = styled(Box)(() => ({\r\n  \"&.scrollbar::-webkit-scrollbar\": {\r\n    width: 10,\r\n    backgroundColor: \"transparent\",\r\n  },\r\n\r\n  \"&.scrollbar::-webkit-scrollbar-thumb\": {\r\n    borderRadius: 20,\r\n    backgroundColor: \"transparent\",\r\n  },\r\n\r\n  \"&.scrollbar:hover::-webkit-scrollbar-thumb\": {\r\n    borderRadius: 20,\r\n    background: \"#6c6b6b\",\r\n  },\r\n}));\r\n\r\nexport default ScrollBar;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport { Badge } from \"@mui/material\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  \"& .MuiBadge-badge\": {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"rippleBadge 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes rippleBadge\": {\r\n    \"0%\": {\r\n      transform: \"scale(0.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default StyledBadge;\r\n","// Proptypes\r\nimport PropTypes from \"prop-types\";\r\n\r\n// React Hook Form\r\nimport { FormProvider as Form } from \"react-hook-form\";\r\n\r\nFormProvider.propTypes = {\r\n  children: PropTypes.node,\r\n  methods: PropTypes.object,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default function FormProvider({ children, onSubmit, methods }) {\r\n  return (\r\n    <Form {...methods}>\r\n      <form onSubmit={onSubmit}>{children}</form>\r\n    </Form>\r\n  );\r\n}\r\n","// Proptypes\r\nimport PropTypes from \"prop-types\";\r\n\r\n// React Hook Form\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\n\r\n// MUI\r\nimport { TextField } from \"@mui/material\";\r\n\r\nRHFTextField.propTypes = {\r\n  name: PropTypes.string,\r\n  helperText: PropTypes.node,\r\n};\r\n\r\nexport default function RHFTextField({ name, helperText, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <TextField\r\n          {...field}\r\n          fullWidth\r\n          value={\r\n            typeof field.value === \"number\" && field.value === 0\r\n              ? \"\"\r\n              : field.value\r\n          }\r\n          error={!!error}\r\n          helperText={error ? error?.message : helperText}\r\n          {...other}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","// Proptypes\r\nimport PropTypes from \"prop-types\";\r\n\r\n// React Hook Form\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\n\r\n// MUI\r\nimport { Autocomplete, TextField } from \"@mui/material\";\r\n\r\nRHFAutocomplete.propTypes = {\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  helperText: PropTypes.node,\r\n};\r\n\r\nexport default function RHFAutocomplete({ name, label, helperText, ...other }) {\r\n  const { control, setValue } = useFormContext();\r\n\r\n  // Autocomplete onChange handler\r\n  const handlerOnChange = (event, newValue) => {\r\n    setValue(name, newValue, { shouldValidate: true });\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <Autocomplete\r\n          {...field}\r\n          fullWidth\r\n          value={\r\n            typeof field.value === \"number\" && field.value === 0\r\n              ? \"\"\r\n              : field.value\r\n          }\r\n          onChange={handlerOnChange}\r\n          {...other}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              label={label}\r\n              error={!!error}\r\n              helperText={error ? error?.message : helperText}\r\n              {...params}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { Stack, TextField } from \"@mui/material\";\r\nimport { useRef } from \"react\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\n\r\nconst RHFCodes = ({ keyName = \"\", inputs = [], ...other }) => {\r\n  const codesRef = useRef(null);\r\n\r\n  const { control } = useFormContext();\r\n\r\n  const handleChangeWithNextField = (event, handleChange) => {\r\n    const { maxLength, value, name } = event.target;\r\n\r\n    const fieldIntIndex = Number(name.replace(keyName, \"\"));\r\n\r\n    const nextField = document.querySelector(\r\n      `input[name=${keyName}${fieldIntIndex + 1}]`\r\n    );\r\n\r\n    if (value.length > maxLength) {\r\n      event.target.value = value[0];\r\n    }\r\n\r\n    if (value.length >= maxLength && fieldIntIndex < 6 && nextField !== null) {\r\n      nextField.focus();\r\n    }\r\n\r\n    handleChange(event);\r\n  };\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2} justifyContent=\"center\" ref={codesRef}>\r\n      {inputs.map((name, index) => (\r\n        <Controller\r\n          key={name}\r\n          name={`${keyName}${index + 1}`}\r\n          control={control}\r\n          render={({ field, fieldState: { error } }) => (\r\n            <TextField\r\n              {...field}\r\n              error={!!error}\r\n              autoFocus={index === 0}\r\n              placeholder={\"-\"}\r\n              onChange={(event) => {\r\n                handleChangeWithNextField(event, field.onChange);\r\n              }}\r\n              onFocus={(event) => event.currentTarget.select()}\r\n              InputProps={{\r\n                sx: {\r\n                  width: { xs: 36, sm: 56 },\r\n                  height: { xs: 36, sm: 56 },\r\n                  \"& input\": { p: 0, textAlign: \"center\" },\r\n                },\r\n              }}\r\n              inputProps={{\r\n                maxLength: 1,\r\n                type: \"number\",\r\n              }}\r\n              {...other}\r\n            />\r\n          )}\r\n        />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default RHFCodes;\r\n","import { styled, alpha } from \"@mui/material/styles\";\r\nimport { InputBase } from \"@mui/material\";\r\nimport { MagnifyingGlass } from \"phosphor-react\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: 20,\r\n  backgroundColor: alpha(theme.palette.background.default, 1),\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBar = () => {\r\n  return (\r\n    <Search>\r\n      <SearchIconWrapper>\r\n        <MagnifyingGlass color=\"#709CE6\" />\r\n      </SearchIconWrapper>\r\n      <StyledInputBase\r\n        placeholder=\"Search...\"\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n      />\r\n    </Search>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","// React\r\nimport React from \"react\";\r\n\r\n// MUI\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\n// Components\r\nimport StyledBadge from \"../../components/StyledBadge\";\r\n\r\n// Socket\r\nimport { socket } from \"../../socket\";\r\nimport { Chat } from \"phosphor-react\";\r\n\r\nconst userId = window.localStorage.getItem(\"userId\");\r\n// console.log(userId, socket);\r\n\r\nconst StyledChatBox = styled(Box)(({ theme }) => ({\r\n  \"&:hover\": {\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst ListComponent = ({\r\n  type,\r\n  id,\r\n  _id,\r\n  firstName,\r\n  lastName,\r\n  avatar,\r\n  incoming,\r\n  missed,\r\n  online,\r\n}) => {\r\n  const name = `${firstName} ${lastName}`;\r\n\r\n  return (\r\n    <StyledChatBox\r\n      sx={{\r\n        width: \"100%\",\r\n        borderRadius: 1,\r\n        backgroundColor: (theme) => theme.palette.background.paper,\r\n      }}\r\n      p={2}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems={\"center\"}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Stack direction=\"row\" alignItems={\"center\"} spacing={2}>\r\n          {\" \"}\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt={name} src={avatar} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={name} src={avatar} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction={\"row\"} spacing={2} alignItems={\"center\"}>\r\n          {(() => {\r\n            switch (type) {\r\n              case \"friend_request\":\r\n                return (\r\n                  <Button\r\n                    onClick={() =>\r\n                      socket?.emit(\r\n                        \"friend_request\",\r\n                        { to: _id, from: userId },\r\n                        () => alert(\"request sent\")\r\n                      )\r\n                    }\r\n                  >\r\n                    Send Request\r\n                  </Button>\r\n                );\r\n\r\n              case \"start_conversation\":\r\n                return (\r\n                  <IconButton\r\n                    onClick={() =>\r\n                      socket?.emit(\"start_conversation\", {\r\n                        to: _id,\r\n                        from: userId,\r\n                      })\r\n                    }\r\n                  >\r\n                    <Chat />\r\n                  </IconButton>\r\n                );\r\n\r\n              case \"accept_request\":\r\n                return (\r\n                  <Button\r\n                    onClick={() =>\r\n                      socket?.emit(\"accept_request\", { requestId: id }, () =>\r\n                        alert(\"request accepted\")\r\n                      )\r\n                    }\r\n                  >\r\n                    Accept Request\r\n                  </Button>\r\n                );\r\n\r\n              default:\r\n                break;\r\n            }\r\n          })()}\r\n        </Stack>\r\n      </Stack>\r\n    </StyledChatBox>\r\n  );\r\n};\r\n\r\nexport default ListComponent;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// List Component\r\nimport ListComponent from \"./ListComponent\";\r\n\r\nconst List = ({ thunk, list, type }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(thunk());\r\n  }, [dispatch, thunk]);\r\n\r\n  // console.log(list);\r\n\r\n  return (\r\n    <>\r\n      {list.map((element) => {\r\n        // Render UserComponent\r\n        return (\r\n          <ListComponent\r\n            type={type}\r\n            key={element._id}\r\n            id={element._id}\r\n            {...element.sender}\r\n            {...element}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","// React\r\nimport { useState } from \"react\";\r\n// MUI\r\nimport { Dialog, DialogContent, Tabs, Tab, Stack } from \"@mui/material\";\r\n// React-Redux\r\nimport { useSelector } from \"react-redux\";\r\n// Redux\r\nimport { fetchUsers, fetchFriends, fetchFriendRequests } from \"../../store\";\r\n// Component\r\nimport List from \"./List\";\r\n\r\nconst Friends = ({ open, handleClose }) => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const { users, friends, friendRequests } = useSelector((state) => state.user);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      open={open}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      sx={{ p: 4 }}\r\n    >\r\n      <Stack p={2} sx={{ width: \"100%\" }}>\r\n        <Tabs value={value} onChange={handleChange} centered>\r\n          <Tab label=\"Explorer\" />\r\n          <Tab label=\"Friends\" />\r\n          <Tab label=\"Requests\" />\r\n        </Tabs>\r\n      </Stack>\r\n      {/* Dialog Content */}\r\n      <DialogContent>\r\n        <Stack sx={{ height: \"100%\" }}>\r\n          <Stack spacing={2.5}>\r\n            {(() => {\r\n              switch (value) {\r\n                case 0: // display all users\r\n                  // Contacts or Groups\r\n                  return (\r\n                    <List\r\n                      thunk={fetchUsers}\r\n                      list={users}\r\n                      type=\"friend_request\"\r\n                    />\r\n                  );\r\n\r\n                case 1: // display all friends\r\n                  // Calls\r\n                  return (\r\n                    <List\r\n                      thunk={fetchFriends}\r\n                      list={friends}\r\n                      type=\"start_conversation\"\r\n                    />\r\n                  );\r\n\r\n                case 2: // display all friend requests\r\n                  return (\r\n                    <List\r\n                      thunk={fetchFriendRequests}\r\n                      list={friendRequests}\r\n                      type=\"accept_request\"\r\n                    />\r\n                  );\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            })()}\r\n          </Stack>\r\n        </Stack>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Friends;\r\n","// MUI\r\nimport { Box } from \"@mui/material\";\r\nimport { alpha } from \"@mui/material/styles\";\r\n\r\nconst ElementWrapper = ({ onClick, children, isSelected }) => {\r\n  // Style\r\n  const boxStyle = {\r\n    width: \"100%\",\r\n    height: 60,\r\n    borderRadius: 1,\r\n    backgroundColor: (theme) =>\r\n      isSelected\r\n        ? theme.palette.mode === \"light\"\r\n          ? alpha(theme.palette.primary.main, 0.5)\r\n          : theme.palette.primary.main\r\n        : theme.palette.mode === \"light\"\r\n        ? \"#fff\"\r\n        : theme.palette.background.paper,\r\n  };\r\n\r\n  return (\r\n    <Box p={1} sx={boxStyle} onClick={onClick}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ElementWrapper;\r\n","// MUI\r\nimport { Stack, Typography, Avatar } from \"@mui/material\";\r\n\r\n// Custom MUI Components\r\nimport StyledBadge from \"../../components/StyledBadge\";\r\n\r\n// Element Box Wrapper\r\nimport ElementWrapper from \"../../components/ElementWrapper\";\r\n\r\n// React-Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectConversation,\r\n  setSingleChatCurrentConversations,\r\n} from \"../../store\";\r\n\r\nconst ChatElement = ({\r\n  id,\r\n  userId,\r\n  img,\r\n  name,\r\n  msg,\r\n  lastMessage,\r\n  time,\r\n  unread,\r\n  online,\r\n}) => {\r\n  //React-Redux\r\n  const dispatch = useDispatch();\r\n  const { roomId } = useSelector((state) => state.user);\r\n  const selectedChatId = roomId?.toString();\r\n  let isSelected = selectedChatId === id.toString();\r\n\r\n  if (!selectedChatId) {\r\n    isSelected = false;\r\n  }\r\n\r\n  return (\r\n    <ElementWrapper\r\n      onClick={() => {\r\n        dispatch(selectConversation({ roomId: id }));\r\n        dispatch(\r\n          setSingleChatCurrentConversations({\r\n            id,\r\n            userId,\r\n            img,\r\n            name,\r\n            msg,\r\n            time,\r\n            unread,\r\n            online,\r\n          })\r\n        );\r\n      }}\r\n      isSelected={isSelected}\r\n    >\r\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Stack direction=\"row\" spacing={2}>\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar src={img} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={name} src={img} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n            <Typography variant=\"caption\">\r\n              {lastMessage?.length > 24\r\n                ? `${lastMessage?.slice(0, 24)}...`\r\n                : lastMessage}\r\n            </Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack height={40} alignItems=\"flex-start\" spacing={2}>\r\n          <Typography sx={{ fontWeight: 600 }} variant=\"caption\">\r\n            {time}\r\n          </Typography>\r\n          {/* <Badge color=\"primary\" badgeContent={unread} /> */}\r\n        </Stack>\r\n      </Stack>\r\n    </ElementWrapper>\r\n  );\r\n};\r\n\r\nexport default ChatElement;\r\n","// React\r\nimport { useEffect } from \"react\";\r\n\r\n// MUI\r\nimport { Stack, Typography } from \"@mui/material\";\r\n\r\n// Chat Element Component\r\nimport ChatElement from \"../pages/dashboard/ChatElement\";\r\n\r\n// Importing Socket\r\nimport { socket } from \"../socket\";\r\n\r\n// React-Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchSingleChatConversations } from \"../store\";\r\n\r\nconst userId = window.localStorage.getItem(\"userId\");\r\n\r\nconst ChatElementDisplay = ({ type }) => {\r\n  // React-Redux\r\n  const dispatch = useDispatch();\r\n  const { conversations, currentMessages } = useSelector(\r\n    (state) => state.chat.singleChat\r\n  );\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"get_single_chat_conversations\", { userId }, (data) => {\r\n      dispatch(fetchSingleChatConversations({ conversations: data }));\r\n    });\r\n  }, [dispatch,currentMessages]);\r\n\r\n  return (\r\n    <>\r\n      {/* <Stack spacing={2.4}>\r\n        <Typography sx={{ color: \"#676767\" }} variant=\"subtitle2\">\r\n          Pinned\r\n        </Typography>\r\n        {ChatList.filter((element) => element.pinned).map((element) => {\r\n          return <ChatElement key={element.id} {...element} />;\r\n        })}\r\n      </Stack> */}\r\n      <Stack spacing={2.4}>\r\n        <Typography sx={{ color: \"#676767\" }} variant=\"subtitle2\">\r\n          {type}\r\n        </Typography>\r\n        {conversations\r\n          .filter((element) => !element.pinned)\r\n          .map((element) => {\r\n            return <ChatElement key={element.id} {...element} />;\r\n          })}\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatElementDisplay;\r\n","// Element Box Wrapper\r\nimport ElementWrapper from \"./ElementWrapper\";\r\n\r\n// MUI\r\nimport { Avatar, IconButton, Stack, Typography } from \"@mui/material\";\r\n\r\n// Importing Custom MUI Components\r\nimport StyledBadge from \"./StyledBadge\";\r\n\r\n// Faker\r\nimport { faker } from \"@faker-js/faker\";\r\n\r\n// Phosphor React\r\nimport { ArrowDownLeft, ArrowUpRight, Phone } from \"phosphor-react\";\r\n\r\nconst CallLogElement = ({ online, incoming, missed }) => {\r\n  return (\r\n    <ElementWrapper>\r\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar src={faker.image.avatar()} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={faker.name.fullName()} src={faker.image.avatar()} />\r\n          )}\r\n          {/* Name and Call History */}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{faker.name.fullName()}</Typography>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n              {incoming ? (\r\n                <ArrowDownLeft color={missed ? \"red\" : \"green\"} />\r\n              ) : (\r\n                <ArrowUpRight color={missed ? \"red\" : \"green\"} />\r\n              )}\r\n              <Typography variant=\"caption\">Yesterday 21:24</Typography>\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n        <IconButton>\r\n          <Phone color=\"green\" />\r\n        </IconButton>\r\n      </Stack>\r\n    </ElementWrapper>\r\n  );\r\n};\r\n\r\nexport default CallLogElement;\r\n","// Data\r\nimport { CallLogs } from \"../data\";\r\n\r\n// Chat Element Component\r\nimport CallLogElement from \"./CallLogElement\";\r\n\r\nconst CallElementDisplay = () => {\r\n  return (\r\n    <>\r\n      {CallLogs.map((call) => {\r\n        return <CallLogElement key={call.id} {...call} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CallElementDisplay;\r\n","import { useState } from \"react\";\r\nimport { IconButton, Stack, Typography, Divider } from \"@mui/material\";\r\nimport { CircleDashed, Users } from \"phosphor-react\";\r\n\r\n// Components\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport ScrollBar from \"../../components/ScrollBar\";\r\n\r\n// Dialog\r\nimport Friends from \"../../sections/friends/Friends\";\r\n\r\n// Style Wrapper\r\nimport LeftBoxWrapper from \"../../components/LeftBoxWrapper\";\r\n\r\n// Element Type Display\r\nimport ChatElementDisplay from \"../../components/ChatElementDisplay\";\r\nimport CallElementDisplay from \"../../components/CallElementDisplay\";\r\n\r\nconst Chat = ({ heading, type, option, elementType }) => {\r\n  // State to manage Friends Dialog\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LeftBoxWrapper padding={3} spacing={2}>\r\n        <Stack spacing={2}>\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"h5\">{heading}</Typography>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n              <IconButton\r\n                onClick={() => {\r\n                  handleOpenDialog();\r\n                }}\r\n              >\r\n                <Users />\r\n              </IconButton>\r\n              <IconButton>\r\n                <CircleDashed />\r\n              </IconButton>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack sx={{ width: \"100%\" }}>\r\n            <SearchBar />\r\n          </Stack>\r\n          <Stack spacing={1}>\r\n            {option}\r\n            <Divider />\r\n          </Stack>\r\n        </Stack>\r\n        <ScrollBar\r\n          className=\"scrollbar\"\r\n          sx={{ flexGrow: 1, height: \"100%\", overflowY: \"scroll\" }}\r\n        >\r\n          <Stack spacing={2} direction=\"column\">\r\n            {(() => {\r\n              switch (elementType) {\r\n                case \"Chat\":\r\n                  // Contacts or Groups\r\n                  return <ChatElementDisplay type={type} />;\r\n\r\n                case \"Call\":\r\n                  // Calls\r\n                  return <CallElementDisplay />;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            })()}\r\n          </Stack>\r\n        </ScrollBar>\r\n      </LeftBoxWrapper>\r\n      {openDialog && (\r\n        <Friends open={openDialog} handleClose={handleCloseDialog} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M216,120H136V40a8,8,0,0,0-16,0v80H40a8,8,0,0,0,0,16h80v80a8,8,0,0,0,16,0V136h80a8,8,0,0,0,0-16Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Plus = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nPlus.displayName = \"Plus\";\n\nexport default Plus;\n","// MUI\r\nimport { Button, Stack } from \"@mui/material\";\r\n\r\n// React-hook-form, Yup, @hookform/resolvers\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\n// Hook Form\r\nimport FormProvider from \"../../components/hook-form\";\r\nimport { RHFTextField } from \"../../components/hook-form\";\r\nimport { RHFAutocomplete } from \"../../components/hook-form\";\r\n\r\nconst MEMBERS = [\"Name 1\", \"Name 2\", \"Name 3\"];\r\n\r\nconst CreateGroupDialogForm = ({ onClose }) => {\r\n  // React Hook Form\r\n  // Object schema for validation\r\n  const LoginSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"Title is required\"),\r\n    members: Yup.array().min(2, \"Must have at least 2 members\"),\r\n  });\r\n\r\n  const defaultValues = {\r\n    title: \"\",\r\n    members: [],\r\n  };\r\n\r\n  // yup resolver will make the object schema readable for the React hook form\r\n  const methods = useForm({\r\n    resolver: yupResolver(LoginSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  // Methods to handle form\r\n  const {\r\n    reset,\r\n    watch,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting, isSubmitSuccessful, isValid },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      // submit data to backend\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      reset();\r\n      setError(\"afterSubmit\", {\r\n        ...error,\r\n        message: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        <RHFTextField name=\"title\" label=\"Title\" />\r\n        <RHFAutocomplete\r\n          name=\"members\"\r\n          label=\"Members\"\r\n          multiple\r\n          freeSolo\r\n          options={MEMBERS.map((option) => option)}\r\n          ChipProps={{ size: \"medium\" }}\r\n        />\r\n        <Stack\r\n          spacing={2}\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"end\"\r\n        >\r\n          <Button onClick={onClose} variant=\"contained\">\r\n            Cancel\r\n          </Button>\r\n          <Button type=\"submit\" variant=\"contained\">\r\n            Create\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default CreateGroupDialogForm;\r\n","// React\r\nimport { useState } from \"react\";\r\n\r\n// Chat\r\nimport Chat from \"./Chat\";\r\n\r\n// MUI\r\nimport { Stack, Typography, Link, IconButton } from \"@mui/material\";\r\n\r\n// MUI Styles\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\n// Phosphor React\r\nimport { Plus } from \"phosphor-react\";\r\n\r\n// Importing Custom MUI Component\r\nimport AlertDialog from \"../../components/AlertDialog\";\r\n\r\n// Importing Form\r\nimport CreateGroupDialogForm from \"./CreateGroupDialogForm\";\r\n\r\nconst Group = () => {\r\n  // Theme\r\n  const theme = useTheme();\r\n\r\n  // State to handle Create New Group Dialog\r\n  const [openCreateNewGroup, setOpenCreateNewGroup] = useState(false);\r\n\r\n  const handlerOpenCreateNewGroup = () => {\r\n    setOpenCreateNewGroup(true);\r\n  };\r\n\r\n  const handlerCloseCreateNewGroup = () => {\r\n    setOpenCreateNewGroup(false);\r\n  };\r\n\r\n  // Option Component\r\n  const createNewGroup = (\r\n    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Typography variant=\"subtitle2\" component={Link}>\r\n        Create New Group\r\n      </Typography>\r\n      <IconButton onClick={handlerOpenCreateNewGroup}>\r\n        <Plus style={{ color: theme.palette.primary.main }} />\r\n      </IconButton>\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Chat\r\n        heading=\"Groups\"\r\n        type=\"All Groups\"\r\n        option={createNewGroup}\r\n        elementType=\"Chat\"\r\n      />\r\n      <AlertDialog\r\n        open={openCreateNewGroup}\r\n        onClose={handlerCloseCreateNewGroup}\r\n        dialogText=\"Hello\"\r\n        dialogForm={\r\n          <CreateGroupDialogForm onClose={handlerCloseCreateNewGroup} />\r\n        }\r\n        fullWidth\r\n        maxWidth=\"xs\"\r\n      ></AlertDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n"],"names":["Transition","React","props","ref","direction","open","onClose","dialogText","dialogContentText","dialogForm","others","TransitionComponent","keepMounted","sx","mb","id","children","padding","spacing","position","height","width","backgroundColor","theme","palette","mode","background","paper","boxShadow","p","ScrollBar","styled","Box","borderRadius","StyledBadge","Badge","color","top","left","animation","border","content","transform","opacity","FormProvider","onSubmit","methods","RHFTextField","name","helperText","other","control","useFormContext","render","field","error","fieldState","TextField","fullWidth","value","message","RHFAutocomplete","label","setValue","handlerOnChange","event","newValue","shouldValidate","Autocomplete","onChange","renderInput","params","keyName","inputs","codesRef","useRef","Stack","justifyContent","map","index","autoFocus","placeholder","handleChange","target","maxLength","fieldIntIndex","Number","replace","nextField","document","querySelector","length","focus","handleChangeWithNextField","onFocus","currentTarget","select","InputProps","xs","sm","textAlign","inputProps","type","Search","alpha","default","marginRight","marginLeft","SearchIconWrapper","pointerEvents","display","alignItems","StyledInputBase","InputBase","paddingLeft","userId","window","localStorage","getItem","StyledChatBox","cursor","_id","firstName","lastName","avatar","online","incoming","missed","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","alt","src","Typography","Button","onClick","socket","to","from","alert","IconButton","requestId","thunk","list","dispatch","useDispatch","useEffect","element","sender","handleClose","useState","useSelector","state","user","users","friends","friendRequests","Dialog","maxWidth","Tabs","centered","Tab","DialogContent","fetchUsers","fetchFriends","fetchFriendRequests","isSelected","boxStyle","primary","main","img","msg","lastMessage","time","unread","roomId","selectedChatId","toString","selectConversation","setSingleChatCurrentConversations","slice","fontWeight","chat","singleChat","conversations","currentMessages","data","fetchSingleChatConversations","filter","pinned","faker","CallLogs","call","heading","option","elementType","openDialog","setOpenDialog","LeftBoxWrapper","Divider","className","flexGrow","overflowY","pathsByWeight","Map","set","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","renderPath","weight","renderPathForWeight","Plus","forwardRef","IconBase","displayName","MEMBERS","LoginSchema","Yup","shape","title","required","members","min","useForm","resolver","yupResolver","defaultValues","reset","setError","watch","handleSubmit","formState","errors","isSubmitting","isSubmitSuccessful","isValid","console","log","multiple","freeSolo","options","ChipProps","size","useTheme","openCreateNewGroup","setOpenCreateNewGroup","handlerCloseCreateNewGroup","createNewGroup","component","Link","style","Chat","AlertDialog"],"sourceRoot":""}