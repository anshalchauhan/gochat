{"version":3,"file":"static/js/184.bbf313c7.chunk.js","mappings":"2WAwHA,EAnFqB,WAEnB,OAAwCA,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAGQC,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,IAAjB,IAA1BH,UAGR,GAAqBI,EAAAA,EAAAA,GAASC,EAAAA,IAAvBC,GAAP,eAIMC,EAAiBC,EAAAA,KAAaC,MAAM,CACxCC,UAAWF,EAAAA,KAAaG,SAAS,yBACjCC,SAAUJ,EAAAA,KAAaG,SAAS,wBAChCE,MAAOL,EAAAA,KACJG,SAAS,qBACTE,MAAM,+BACTC,SAAUN,EAAAA,KAAaG,SAAS,0BAW5BI,GAAUC,EAAAA,EAAAA,IAAQ,CACtBC,UAAUC,EAAAA,EAAAA,GAAYX,GACtBY,cAVoB,CACpBT,UAAW,GACXE,SAAU,GACVC,MAAO,kBACPC,SAAU,aAUVM,EAEEL,EAFFK,aACaC,EACXN,EADFO,UAAaD,OAOf,OACE,SAAC,KAAD,CAAcN,QAASA,EAASQ,SAAUH,GAL3B,SAACI,GAChBlB,EAAWkB,EACZ,IAGC,UACE,UAACC,EAAA,EAAD,CAAOC,QAAS,EAAhB,YACKL,EAAOM,cACR,SAACC,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBR,EAAOM,YAAYG,WAE9C,UAACL,EAAA,EAAD,CAAOM,UAAW,CAAEC,GAAI,SAAUC,GAAI,OAASP,QAAS,EAAxD,WACE,SAAC,KAAD,CAAcQ,KAAK,YAAYC,MAAM,gBACrC,SAAC,KAAD,CAAcD,KAAK,WAAWC,MAAM,kBAEtC,SAAC,KAAD,CAAcD,KAAK,QAAQC,MAAM,WACjC,SAAC,KAAD,CACED,KAAK,WACLC,MAAM,WACNC,KAAMtC,EAAe,OAAS,WAC9BuC,WAAY,CACVC,cACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,SAACC,EAAA,EAAD,CAAYC,QAAS,kBAAM3C,GAAiBD,EAAvB,EAArB,SACGA,GAAe,SAAC,IAAD,KAAU,SAAC,IAAD,YAMpC,SAAC6C,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,UACNC,KAAK,QACLV,KAAK,SACLW,QAAQ,YACRC,GAAIC,EAAAA,EANN,SAQGjD,GAAY,SAACkD,EAAA,EAAD,CAAkBL,MAAM,YAAe,uBAK7D,E,SCpED,EAtCiB,WASf,OACE,+BACE,UAACpB,EAAA,EAAD,CAAOC,QAAS,EAAGsB,GAAI,CAAEG,GAAI,EAAGX,SAAU,YAA1C,WACE,SAACY,EAAA,EAAD,CAAYL,QAAQ,KAApB,sCACA,UAACtB,EAAA,EAAD,CAAOM,UAAW,MAAOL,QAAS,GAAlC,WACE,SAAC0B,EAAA,EAAD,CAAYL,QAAQ,QAApB,uCACA,SAACM,EAAA,EAAD,CAAMC,UAAWC,EAAAA,GAAYC,GAAG,cAAcT,QAAQ,YAAtD,yBAMF,SAAC,EAAD,KACA,UAACK,EAAA,EAAD,CAAYE,UAAW,MAAON,GApBL,CAC7BH,MAAO,iBACPY,GAAI,EACJC,WAAY,UACZC,UAAW,UAgBP,UACG,8BACD,SAACN,EAAA,EAAD,CAAMO,UAAU,SAASf,MAAM,eAA/B,8BAGC,SACD,SAACQ,EAAA,EAAD,CAAMO,UAAU,SAASf,MAAM,eAA/B,gCAIF,SAACgB,EAAA,EAAD,QAIP,C","sources":["sections/auth/RegisterForm.js","pages/auth/Register.js"],"sourcesContent":["// React\r\nimport { useState } from \"react\";\r\n\r\n// React-hook-form, Yup, @hookform/resolvers\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\n// Hook Form\r\nimport FormProvider from \"../../components/hook-form\";\r\nimport { RHFTextField } from \"../../components/hook-form\";\r\n\r\n// MUI\r\nimport {\r\n  Stack,\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  Alert,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\n\r\n// Phosphor react\r\nimport { Eye, EyeSlash } from \"phosphor-react\";\r\n\r\n//Styles\r\nimport { loginButton as registerButton } from \"./LoginForm\";\r\n\r\n// Redux\r\nimport { register } from \"../../store\";\r\n\r\n// React-Redux\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// Redux useThunk Hook\r\nimport useThunk from \"../../hooks/useThunk\";\r\n\r\nconst RegisterForm = () => {\r\n  //State\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  //React-Redux\r\n  const { isLoading } = useSelector((state) => state.auth);\r\n\r\n  // Passing register thunk in hook\r\n  const [doRegister] = useThunk(register);\r\n\r\n  // React Hook Form\r\n  // Object Schema for validaiton\r\n  const RegisterSchema = Yup.object().shape({\r\n    firstName: Yup.string().required(\"Firstname is required\"),\r\n    lastName: Yup.string().required(\"Lastname is required\"),\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Enter a valid Email Address\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  const defaultValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"demo@gochat.com\",\r\n    password: \"demo123\",\r\n  };\r\n\r\n  // yup resolver will make the object schema readable for the React hook form\r\n  const methods = useForm({\r\n    resolver: yupResolver(RegisterSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const onSubmit = (data) => {\r\n    doRegister(data);\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        {!!errors.afterSubmit && (\r\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\r\n        )}\r\n        <Stack direction={{ xs: \"column\", sm: \"row\" }} spacing={2}>\r\n          <RHFTextField name=\"firstName\" label=\"First Name\" />\r\n          <RHFTextField name=\"lastName\" label=\"Last Name\" />\r\n        </Stack>\r\n        <RHFTextField name=\"email\" label=\"Email\" />\r\n        <RHFTextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={() => setShowPassword(!showPassword)}>\r\n                  {showPassword ? <Eye /> : <EyeSlash />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Button\r\n          fullWidth\r\n          color=\"inherit\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          sx={registerButton}\r\n        >\r\n          {isLoading ? <CircularProgress color=\"inherit\" /> : \"Create Account\"}\r\n        </Button>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","// MUI\r\nimport { Stack, Typography, Link } from \"@mui/material\";\r\n\r\n// React Router Dom\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\n// Form\r\nimport RegisterForm from \"../../sections/auth/RegisterForm\";\r\n\r\n// Authorization\r\nimport AuthSocial from \"../../sections/auth/AuthSocial\";\r\n\r\nconst Register = () => {\r\n  //Styles\r\n  const termsAndConditionStyle = {\r\n    color: \"text.secondary\",\r\n    mt: 3,\r\n    typography: \"caption\",\r\n    textAlign: \"center\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }}>\r\n        <Typography variant=\"h4\">Get Started With GoChat</Typography>\r\n        <Stack direction={\"row\"} spacing={0.5}>\r\n          <Typography variant=\"body2\">Already have an account?</Typography>\r\n          <Link component={RouterLink} to=\"/auth/login\" variant=\"subtitle2\">\r\n            Sign in\r\n          </Link>\r\n        </Stack>\r\n\r\n        {/* Register Form */}\r\n        <RegisterForm />\r\n        <Typography component={\"div\"} sx={termsAndConditionStyle}>\r\n          {\"By signing up, I agree to \"}\r\n          <Link underline=\"always\" color=\"text.primary\">\r\n            Terms of service\r\n          </Link>\r\n          {\" and \"}\r\n          <Link underline=\"always\" color=\"text.primary\">\r\n            Privacy Policy\r\n          </Link>\r\n        </Typography>\r\n        <AuthSocial />\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["useState","showPassword","setShowPassword","isLoading","useSelector","state","auth","useThunk","register","doRegister","RegisterSchema","Yup","shape","firstName","required","lastName","email","password","methods","useForm","resolver","yupResolver","defaultValues","handleSubmit","errors","formState","onSubmit","data","Stack","spacing","afterSubmit","Alert","severity","message","direction","xs","sm","name","label","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","Button","fullWidth","color","size","variant","sx","registerButton","CircularProgress","mb","Typography","Link","component","RouterLink","to","mt","typography","textAlign","underline","AuthSocial"],"sourceRoot":""}